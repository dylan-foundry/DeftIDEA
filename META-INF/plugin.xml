<idea-plugin version="2">
  <id>org.dylanfoundry.deft</id>
  <name>DeftIDEA</name>
  <description><![CDATA[
    <p>This plugin provides support for the <a href="http://opendylan.org/">Dylan</a> programming language.</p>
  ]]></description>
  <vendor url="http://dylanfoundry.org/">Dylan Foundry</vendor>
  <version>0.5</version>
  <depends>com.intellij.modules.lang</depends>
  <changes><![CDATA[
  <p>0.5</p>
  <ul>
    <li>A common traceback in the syntax highlighting code that happens while entering code
        has been fixed.</li>
  </ul>
  <p>0.4</p>
  <ul>
    <li>Improvements to Dylan parsing, including better handling of macro
        definitions, multiple variables or constants in a single definer,
        and many other things.</li>
    <li>Improvements to code folding.</li>
    <li>Improvements to testworks parsing when keywords are passed to a
        suite or test definer.</li>
    <li>Added support for various sanity and style checks via code annotation.</li>
    <li>Initial support for brace / parenthesis matching.</li>
    <li>"define table" is now supported.</li>
    <li>Added error recovery to the Dylan parser.</li>
    <li>Live templating</li>
    <li>Start of code formatting and indenting.</li>
  </ul>
  <p>0.3</p>
  <ul>
    <li>Further improvements to parsing the Dylan language.</li>
    <li>Improvements to syntax highlighting for Dylan.</li>
    <li>Improvements to the icons used in structure and go-to-X views.</li>
    <li>Improvements to function and method names in structure and go-to-symbol views.</li>
    <li>Dylan syntax highlighting colors can be configured in the preferences.</li>
    <li>Method separators are now supported when enabled in preferences. However, they separate
        definers instead of only methods.</li>
    <li>Next / Previous Method work, but navigate between definers.</li>
    <li>Hardcoded some support for testworks definers.</li>
  </ul>
  <p>0.2</p>
  <ul>
    <li>Significant progress on parsing the Dylan language.</li>
    <li>Go To Symbol and Go To Class work (but not optimally).</li>
    <li>Folding works on method, function, class, library and module definitions.</li>
    <li>Structure View partially works.</li>
  </ul>
  <p>0.1.1</p>
  <ul>
    <li>Two new LID inspections.</li>
    <li>Simplified import / new project code. Should work with the v13 EAP.</li>
  </ul>
  <p>0.1</p>
  <ul>
    <li>Original release</li>
  </ul>
  ]]></changes>

  <idea-version since-build="129.239"/>

  <extensions defaultExtensionNs="com.intellij">
    <fileTypeFactory implementation="org.dylanfoundry.deft.filetypes.dylan.DylanFileTypeFactory"/>
    <fileTypeFactory implementation="org.dylanfoundry.deft.filetypes.intr.MelangeInterfaceFileTypeFactory"/>
    <fileTypeFactory implementation="org.dylanfoundry.deft.filetypes.lid.LIDFileTypeFactory"/>

    <sdkType implementation="org.dylanfoundry.deft.module.DeftSdkType"/>
    <moduleType id="DEFT_MODULE" implementationClass="org.dylanfoundry.deft.module.DeftModuleType"/>
    <projectStructureDetector implementation="org.dylanfoundry.deft.module.DeftProjectStructureDetector"/>

    <defaultLiveTemplatesProvider implementation="org.dylanfoundry.deft.filetypes.dylan.template.DylanLiveTemplateProvider"/>
    <liveTemplateContext implementation="org.dylanfoundry.deft.filetypes.dylan.template.DylanContextType$Generic"/>
    <liveTemplateContext implementation="org.dylanfoundry.deft.filetypes.dylan.template.DylanContextType$Definition"/>
    <liveTemplateContext implementation="org.dylanfoundry.deft.filetypes.dylan.template.DylanContextType$Expression"/>

    <!-- LID files -->
    <lang.parserDefinition language="LID" implementationClass="org.dylanfoundry.deft.filetypes.lid.LIDParserDefinition"/>
    <lang.syntaxHighlighterFactory key="LID" implementationClass="org.dylanfoundry.deft.filetypes.lid.LIDSyntaxHighlighterFactory"/>
    <completion.contributor language="LID" implementationClass="org.dylanfoundry.deft.filetypes.lid.LIDCompletionContributor"/>
    <colorSettingsPage implementation="org.dylanfoundry.deft.filetypes.lid.LIDColorSettingsPage"/>
    <inspectionToolProvider implementation="org.dylanfoundry.deft.filetypes.lid.inspections.InspectionProvider"/>

    <!-- Dylan files -->
    <lang.parserDefinition language="Dylan" implementationClass="org.dylanfoundry.deft.filetypes.dylan.DylanParserDefinition"/>
    <lang.syntaxHighlighterFactory key="Dylan" implementationClass="org.dylanfoundry.deft.filetypes.dylan.highlight.DylanSyntaxHighlighterFactory"/>
    <codeInsight.lineMarkerProvider language="Dylan" implementationClass="org.dylanfoundry.deft.filetypes.dylan.DylanLineMarkerProvider"/>
    <codeStyleSettingsProvider implementation="org.dylanfoundry.deft.filetypes.dylan.formatter.settings.DylanCodeStyleSettingsProvider"/>
    <colorSettingsPage implementation="org.dylanfoundry.deft.filetypes.dylan.highlight.DylanColorSettingsPage"/>
    <completion.contributor language="Dylan" implementationClass="org.dylanfoundry.deft.filetypes.dylan.completion.DylanHeaderCompletionContributor"/>
    <fileBasedIndex implementation="org.dylanfoundry.deft.filetypes.dylan.index.DylanClassIndex"/>
    <fileBasedIndex implementation="org.dylanfoundry.deft.filetypes.dylan.index.DylanSymbolIndex"/>
    <gotoSymbolContributor implementation="org.dylanfoundry.deft.filetypes.dylan.DylanSymbolContributor"/>
    <gotoClassContributor implementation="org.dylanfoundry.deft.filetypes.dylan.DylanClassContributor"/>
    <inspectionToolProvider implementation="org.dylanfoundry.deft.filetypes.dylan.inspections.InspectionProvider"/>
    <lang.braceMatcher language="Dylan" implementationClass="org.dylanfoundry.deft.filetypes.dylan.highlight.DylanBraceMatcher"/>
    <lang.commenter language="Dylan" implementationClass="org.dylanfoundry.deft.filetypes.dylan.DylanCommenter"/>
    <lang.documentationProvider language="Dylan" implementationClass="org.dylanfoundry.deft.filetypes.dylan.documentation.DylanDefinitionDocumentationProvider"/>
    <lang.foldingBuilder language="Dylan" implementationClass="org.dylanfoundry.deft.filetypes.dylan.DylanFoldingBuilder"/>
    <lang.formatter language="Dylan" implementationClass="org.dylanfoundry.deft.filetypes.dylan.formatter.DylanFormattingModelBuilder"/>
    <lang.psiStructureViewFactory language="Dylan" implementationClass="org.dylanfoundry.deft.filetypes.dylan.structure.DylanStructureViewFactory"/>
    <methodNavigationOffsetProvider implementation="org.dylanfoundry.deft.filetypes.dylan.DylanMethodNavigationOffsetProvider"/>
    <annotator language="Dylan" implementationClass="org.dylanfoundry.deft.filetypes.dylan.highlight.DylanSyntaxAnnotator"/>
    <annotator language="Dylan" implementationClass="org.dylanfoundry.deft.filetypes.dylan.DylanSanityAnnotator"/>
    <langCodeStyleSettingsProvider implementation="org.dylanfoundry.deft.filetypes.dylan.formatter.settings.DylanLanguageCodeStyleSettingsProvider"/>

    <!-- Template Group -->
    <fileTemplateGroup implementation="org.dylanfoundry.deft.actions.DeftTemplatesFactory"/>

    <!-- Libraries -->
    <library.type implementation="org.dylanfoundry.deft.library.DeftLibraryType"/>
  </extensions>
</idea-plugin>
